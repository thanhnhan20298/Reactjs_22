{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/FE/Learn Reactjs/my-app/src/components/tictactoe/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { calculateWinner } from \"../../helpers\";\nimport Board from \"./Board\";\nimport \"./GameStyle.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = () => {\n  _s();\n\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const winner = calculateWinner(board);\n\n  const handleClick = index => {\n    const boardCopy = [...board];\n    if (winner || boardCopy[index]) return;\n    boardCopy[index] = xIsNext ? \"x\" : \"o\";\n    setBoard(boardCopy);\n    setXIsNext(!xIsNext);\n  };\n\n  const handleResetGame = () => {\n    setBoard(Array(9).fill(null));\n    setXIsNext(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      cells: board,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-winner\",\n      children: \"Winner is ${winner}\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"game-reset\",\n      onClick: handleResetGame,\n      children: \"Reset game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"znBF1eYeJNOReqN4BeETvwkOe4A=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/mac/Documents/FE/Learn Reactjs/my-app/src/components/tictactoe/Game.js"],"names":["React","useState","calculateWinner","Board","Game","board","setBoard","Array","fill","xIsNext","setXIsNext","winner","handleClick","index","boardCopy","handleResetGame"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAO,iBAAP;;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACM,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAAlC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMU,MAAM,GAAGT,eAAe,CAACG,KAAD,CAA9B;;AACA,QAAMO,WAAW,GAAIC,KAAD,IAAW;AAC7B,UAAMC,SAAS,GAAG,CAAC,GAAGT,KAAJ,CAAlB;AACA,QAAIM,MAAM,IAAIG,SAAS,CAACD,KAAD,CAAvB,EAAgC;AAChCC,IAAAA,SAAS,CAACD,KAAD,CAAT,GAAmBJ,OAAO,GAAG,GAAH,GAAS,GAAnC;AACAH,IAAAA,QAAQ,CAACQ,SAAD,CAAR;AACAJ,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAND;;AAOA,QAAMM,eAAe,GAAG,MAAM;AAC5BT,IAAAA,QAAQ,CAACC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CAAD,CAAR;AACAE,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAHD;;AAIA,sBACE;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEL,KAAd;AAAqB,MAAA,OAAO,EAAEO;AAA9B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBAA8B;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAEG,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAxBD;;GAAMX,I;;KAAAA,I;AA0BN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { calculateWinner } from \"../../helpers\";\nimport Board from \"./Board\";\n\nimport \"./GameStyle.css\";\nconst Game = () => {\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const winner = calculateWinner(board);\n  const handleClick = (index) => {\n    const boardCopy = [...board];\n    if (winner || boardCopy[index]) return;\n    boardCopy[index] = xIsNext ? \"x\" : \"o\";\n    setBoard(boardCopy);\n    setXIsNext(!xIsNext);\n  };\n  const handleResetGame = () => {\n    setBoard(Array(9).fill(null));\n    setXIsNext(true);\n  };\n  return (\n    <div>\n      <Board cells={board} onClick={handleClick}></Board>\n      <div className=\"game-winner\">{\"Winner is ${winner}\"}</div>\n      <button className=\"game-reset\" onClick={handleResetGame}>\n        Reset game\n      </button>\n    </div>\n  );\n};\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}